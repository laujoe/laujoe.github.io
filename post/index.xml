<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Lau Joe / Soar Freely</title>
        <link>https://laujoe.github.io/post/</link>
        <description>Recent content in Posts on Lau Joe / Soar Freely</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Lau Joe &amp; Soar Freely All rights reserved. 如需转载与引用，请注明文章链接及作者。</copyright>
        <lastBuildDate>Wed, 27 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://laujoe.github.io/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>未来可期的生产力工具：Lattics</title>
        <link>https://laujoe.github.io/p/test-chinese/</link>
        <pubDate>Wed, 27 Dec 2023 00:00:00 +0000</pubDate>
        
        <guid>https://laujoe.github.io/p/test-chinese/</guid>
        <description>&lt;img src="https://laujoe.github.io/p/test-chinese/Picture01.jpg" alt="Featured image of post 未来可期的生产力工具：Lattics" /&gt;&lt;p&gt;作为重度工具评测爱好者，我很喜欢尝试使用各式各样的生产力、效率工具来改善我的生产力工作流。熟悉我的朋友应该了解，我并不喜欢「All in One」，而是主张引入各式各样的软件来顺应原本的工作流，某一软件的「弃置」并不会影响我的整体生产力工作流。&lt;/p&gt;
&lt;p&gt;然而在评测 Lattics 时，我认为这是一款比较特殊的软件，它有不少值得深度优化的地方，但是它本身已经能够实现一套逻辑足以自恰的整理、创作工作流，然而又不会影响我的整体生产力工作流。因此，我希望从创作过程切入，讨论我所理解的 Lattics 。&lt;/p&gt;
&lt;h2 id=&#34;未来可期的文件管理工具&#34;&gt;未来可期的文件管理工具
&lt;/h2&gt;&lt;p&gt;Lattics 内置「了解 Lattics 」这一简约而不简单的导航文档，在其中介绍了「类脑式」的知识管理与写作以及 Lattics 功能概览两方面内容，为刚接触 Lattics 的新朋友介绍了如何基本入门 Lattics 。同时内置「报告」、「论文」、「读书笔记」、「短文」、「诗歌」、「小说」六种名称的「文件夹」，新朋友可以根据这六种文件夹来分别管理个人的文件，不过还有很多地方值得进一步优化。&lt;/p&gt;
&lt;p&gt;以「论文」为例，我在其中放置了 Pdf 、 Word 、 Excel 以及一些图像，对于 Pdf 与一般格式的图像文件， Lattics 都支持软件内部查看，然而对于较为大型（测试时，我采用的是 860 M 的 Pdf 文件）的文件时， Lattics 还是不免有较长的延迟情况。同样为860 M 的 Pdf 文件，我用 Devonthink 打开所需时间为 1 秒，然而 Lattics 却需要 5 秒。&lt;/p&gt;
&lt;p&gt;除此， Word 、 Excel 文件还不支持软件内部查看，还需要通过外部软件进行查阅，这使得文件管理稍显效率低下。然而这些问题都能够通过后续更新进行优化、解决，目前已经足够支撑轻度的日常写作，而对于更多文件格式的支持会提高 Lattics 文件管理的上限，使其更具有普适性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laujoe.github.io/p/test-chinese/Picture02.jpg&#34;
	width=&#34;2400&#34;
	height=&#34;1600&#34;
	srcset=&#34;https://laujoe.github.io/p/test-chinese/Picture02_hu_cfca395480b84df1.jpg 480w, https://laujoe.github.io/p/test-chinese/Picture02_hu_f8321312a0122fd1.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Picture 01&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;360px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;进一步说， Lattics 的底层架构很适合进行丰富、复杂的文件管理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其一，其支持无限层级的目录结构，这对于文件管理很是友好。并且每个文件夹（不论层级）都可以更换图标，这对于区分文件夹具有重要作用。&lt;/li&gt;
&lt;li&gt;其二，所有文件都能够在文件夹内随意拖拽，例如我创作一篇论文，完全可以将分别创作里面的几个章节，然后将相应的资料（ Pdf 文件、图像等）放置相应的章节处。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此， Lattics 的底层架构已经为文件管理打好了地基，只需要后续不断丰富完善，便可以建设好一套十分方便的文件管理系统。然而这套文件管理系统还有一个关键性问题仍需解决，这即需要联系 Lattics 的功能定位来展开论述。&lt;/p&gt;
&lt;h2 id=&#34;管理还是写作&#34;&gt;管理还是写作？
&lt;/h2&gt;&lt;p&gt;Lattics 的官方网站将其称作为「类脑式知识管理笔记与写作」，意图将管理与写作一网打尽。然而就目前的使用体验， Lattics 确实做到了较好的写作体验，然而在管理层面却有所割裂。&lt;/p&gt;
&lt;p&gt;Lattics 主打卡片写作，即随时随地都能够记录各种灵感碎片。同时支持专业级别的数学公式与 Markdown ，以及不同样式的论文模板， Zotero 亦能够在 Lattics 内进行链接。然而在具体使用时，我却感受到一种割裂感。&lt;/p&gt;
&lt;p&gt;举一个简单的例子， Lattics 内置导出功能，能够将文件导出为 Pdf 、 Word 、图片、 Markdown 、 TXT 等各种格式，然而这些文件的导出仅支持「文章」，我插入文章里的图片可以顺利导出，但是单独的图像文件却不能按照这种逻辑导出， Pdf 文件亦是如此。&lt;/p&gt;
&lt;p&gt;从「文章」内图片可以导出这一情况，我们能够发现 Lattics 本身支持图片的导入导出，然而在进行具体文件的导出时，导出逻辑有所缺失——即它仅将「文章」导出，而将其他附件（主要是使用者导入的特殊格式文件）有所忽略。这样一来，便会造成体验时的割裂感，即我导入的文件（外来）与内置「文章」是两种运用逻辑，这两者并不能顺利的融洽为一。关于改进方式，我的建议是理顺导出逻辑，并且给予使用者一定的自由度——使用者可以根据选项自由选择是否将哪项、哪类导入文件同「文章」一齐导出。&lt;/p&gt;
&lt;p&gt;在这里需要提到 Lattics 的思维导图功能（官方将其称作创作可视化），它的思维导图支持思维、情节、鸟瞰三种形式，适合不同情境下的具体运用。并且思维导图可以随意调整文件（包括上下层级、先后顺序），并会实时改变文件夹的目录状态。其中的文件还能够增加强调色，甚至还有自动布局功能，使管理更为方便。&lt;/p&gt;
&lt;p&gt;这套思维导图功能十分好用，然而这里的问题与前者相似，都是缺乏外置导入文件与内置「文章」（卡片）的融洽结合。思维导图有「内容筛选」这一选项，然而其中仅有「文章」、「卡片」、「标签」三者，在我看来，开发者可以加入更多选项，将外置导入文件囊括进去。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laujoe.github.io/p/test-chinese/Picture03.jpg&#34;
	width=&#34;1558&#34;
	height=&#34;1530&#34;
	srcset=&#34;https://laujoe.github.io/p/test-chinese/Picture03_hu_da3590f87b0393b3.jpg 480w, https://laujoe.github.io/p/test-chinese/Picture03_hu_1d6ca7e325e27851.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Picture 02&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;101&#34;
		data-flex-basis=&#34;244px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;正如本节标题所言，「管理还是写作？」其实 Lattics 并未做好两者的平衡，或者说是融洽相处。导入大量外置文件就需要进行一定的文件管理，这些文件作为重要的参考资料对于写作具有重要作用，然而在 Lattics 的运行逻辑中，内置「文章」（卡片）居于核心位置本属正常，然而对外置文件的忽略却使得文件管理与文本写作两者并不相容，最终造成 Lattics 运行逻辑的割裂感。&lt;/p&gt;
&lt;h2 id=&#34;令人舒适的写作软件&#34;&gt;令人舒适的写作软件
&lt;/h2&gt;&lt;p&gt;值得注意的是，我在前两节所述 Lattics 的文件管理与文本写作存有割裂感，并不代表 Lattics 工具本身不好用，而是它理应在两者之间取得较好的融合。具体到文本写作， Lattics 可以说是相当舒适，能够满足大多数人的写作需求。&lt;/p&gt;
&lt;p&gt;我认为 Lattics 有三套主要的写作工具。&lt;/p&gt;
&lt;p&gt;其一为「卡片」，使用者可以在「卡片库」写作各种各样的「卡片」，然后穿插在不同「文章」中。我个人认为这些「卡片」完全可以作为「灵感源泉」，当外出或者是阅读时，头脑突然闪过一些奇思妙想，就可以在卡片库中创作卡片，晚上将这些卡片重新梳理、复盘，或者撰写成短文。或是将「卡片库」当成「论文资料库」，例如我为了写作一篇论文翻阅了大量资料，我完全可以将这些资料的核心精华制作成卡片，然后在写作时随时阅览，或是添加至相关文章。因此，「卡片库」是一个适用于各种场景的「个人灵感库」，能够承载不同使用者的需求。&lt;/p&gt;
&lt;p&gt;第二套写作工具为「图文分栏」（或文文分栏），我认为这很适合自媒体以及喜欢图文分享的朋友进行创作，或者是进行日记记录。以我为例，我有做日记的习惯（目前在 Obsidian 写日记），而 Lattics 这套颇为自由的图文分栏就可以让我将日常拍摄的照片以较为精致的方式展现出来，而后导出图片或 Pdf 格式，存储至 Devonthink 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laujoe.github.io/p/test-chinese/Picture04.jpg&#34;
	width=&#34;1452&#34;
	height=&#34;1540&#34;
	srcset=&#34;https://laujoe.github.io/p/test-chinese/Picture04_hu_30a663c08f3b4ec8.jpg 480w, https://laujoe.github.io/p/test-chinese/Picture04_hu_87615094fd235daf.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Picture 03&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;94&#34;
		data-flex-basis=&#34;226px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;还有一些自媒体用户或喜欢分享日常生活的朋友，以图文分栏形式记录生活、分享心得体会都是不错的途径。从专业学习角度来看， Lattics 的「图文分栏」也可以用来学习，例如我的学科专业为艺术学理论，平时需要阅览大量图片，而相关专业学生就可以用图文分栏形式摘录图片，写作相关的心得体会，进行专业学习。&lt;/p&gt;
&lt;p&gt;第三套写作工具为「文章」，主要体现在「文章」中进行「块状」写作，即文章中的段落、图像、表格、代码、数学公式等内容都可以作为一个个「块」，这些「块」可以自由地进行拖拽移动，在文章内任意调整位置。这种块状写作并不少见，例如 Notion 、 Anytype 等软件均支持块状写作。然而 Lattics 这种块状写作更为丝滑，配合「卡片库」具有 1 + 1 大于 2 的效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laujoe.github.io/p/test-chinese/Picture05.jpg&#34;
	width=&#34;1008&#34;
	height=&#34;1176&#34;
	srcset=&#34;https://laujoe.github.io/p/test-chinese/Picture05_hu_c3d0ac7fc5d268f3.jpg 480w, https://laujoe.github.io/p/test-chinese/Picture05_hu_334124b47f1f7559.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Picture 04&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;85&#34;
		data-flex-basis=&#34;205px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这三套写作工具相互配合，相得益彰，使文本写作体验十分顺畅。尤其是 Lattics 支持顺序阅读模式，即一个文件夹内的「文章」能够按顺序浏览，从而将不同文章联接起来。然而顺序浏览所存在的重要缺陷同我前文所讲一致——外置文件并不能参与进顺序阅读模式，仅有内置「文章」能够以顺序阅读模式进行较为舒适的阅读。如果开发者能够解决外置文件的管理、导出、阅读等问题，使其与内置「文章」和谐相融， Lattics 将会是一款臻于完美的软件。&lt;/p&gt;
&lt;h2 id=&#34;本地存储&#34;&gt;本地存储
&lt;/h2&gt;&lt;p&gt;我在「生产力祛魅」系列文章指出一套能够持续运行的生产力工作流必须要符合三个条件，其一便为本地化，即生产力工作流要能够在「断网」的情况下使用，而非意指仅能在本地运用。&lt;/p&gt;
&lt;p&gt;很多朋友或许会认为这是一种杞人忧天的想法，现代世界如此发达，云端办公已成趋势。我并不否认云端办公、学习的方便快捷，然而使用云端的前提是「信息安全」，如果遇到特殊情况或自然灾害（不可抗力导致的信息丢失），抑或需要递交具有时效性的信息材料却遇到网络问题时，「本地化」便能解燃眉之急。&lt;/p&gt;
&lt;p&gt;例如  Notion ，我经常能看到一些朋友询问不能登录、或是无法连接等问题。因此，虽然十分好用，我还是没有将其纳入我的生产力工作流。因此， Lattics 将所有内容都保存在本地（同时支持本地全库备份），不会自动上传网络或服务器的设定很符合我的使用习惯。如果需要云同步（以后会提供，目前尚未开放）， Lattics 也支持 iCloud 、 Google Drive 等云服务。&lt;/p&gt;
&lt;h2 id=&#34;闪卡&#34;&gt;闪卡
&lt;/h2&gt;&lt;p&gt;Lattics 最令我惊喜的一点是它内置有「闪卡」，按照网络解释，闪卡（Flashcard）又称抽认卡，是一种辅助记忆的工具，通常有正反两面。卡片正面记录问题，而背面有对该问题的答案，可用于记忆单词、历史事件、公式或任何能够通过「问题-回答」形式展现的信息。我在考研复习时，就利用闪卡记忆知识点背诵。配合闪卡，学生们可以专门建立不同学科的文件夹，然后制作各种各样的「文章」，需要整体复习时采用顺序阅读模式，需要记忆背诵时则采取闪卡模式。&lt;/p&gt;
&lt;p&gt;不过闪卡模式还存有一些不足，例如所有「文章」都会出现在闪卡中，这样一来，类似于标题这种「缺乏实际内容」的闪卡也会出现，对记忆背诵造成干扰。除此，闪卡的卡片还是集中在「文章」，缺少对外置导入文件的利用，这则需要开发者进一步优化。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;本文对 Lattics 的一些重要功能做了评测，从整体来说， Lattics 是一款未来可期的生产力工具，它在文本写作体验已经颇为完善，能够给予不同类型的创作者较好的体验。然而作为定位于「类脑式知识管理笔记与写作」功能的工具， Lattics 在知识管理（主要是文件管理）方面存有不足，主要体现于外置导入文件的匮乏，其一为支持格式较少，其二为外置导入文件难以与内置「文章」（卡片）产生联系互动，从而导致工具在具体使用时存有割裂感。然而瑕不掩瑜， Lattics 确实是一款值得使用并纳入生产力工作流的软件，而这些缺陷则留待开发者后续更新、优化，最终将 Lattics 塑就为一款市场优品。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
